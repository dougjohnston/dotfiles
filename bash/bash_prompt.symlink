# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
  export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
  tput sgr0
  if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
    # iTerm2 on OSX
    PINK=$(tput setaf 162)
    MAGENTA=$(tput setaf 91)
    RED=$(tput setaf 1)
    ORANGE=$(tput setaf 202)
    YELLOW=$(tput setaf 220)
    GREEN=$(tput setaf 70)
    PURPLE=$(tput setaf 98)
    CYAN=$(tput setaf 80)
    BLUE=$(tput setaf 14)
    GRAY=$(tput setaf 59)
    WHITE=$(tput setaf 15)
  else
    MAGENTA=$(tput setaf 5)
    ORANGE=$(tput setaf 4)
    GREEN=$(tput setaf 2)
    PURPLE=$(tput setaf 1)
    WHITE=$(tput setaf 7)
  fi
  BOLD=$(tput bold)
  RESET=$(tput sgr0)
else
  MAGENTA="\033[1;31m"
  ORANGE="\033[1;33m"
  GREEN="\033[1;32m"
  PURPLE="\033[1;35m"
  WHITE="\033[1;37m"
  BOLD=""
  RESET="\033[m"
fi

TOKEN="\[$CYAN\]≫"

function parse_git_dirty() {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working tree clean" ]] && echo "*"
}

function parse_git_branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

function ruby_version() {
  ruby -v | sed -e "s/ruby //" -e s/p.*//
  #while :; do ruby -v | sed -e "s/ruby //" -e s/p.*//; sleep 1; done
}

PS1="\[$GRAY\]\D{%T} $TOKEN\[$GRAY\] \u@\h $TOKEN \[$RED\]\$(ruby_version) $TOKEN \[$ORANGE\]\w \[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]])$TOKEN \[$PURPLE\]\$(parse_git_branch)\[$WHITE\]\n\$ \[$RESET\]"
