" Leader
let mapleader=","


""" VIM BUNDLES
" Vundle Setup
set nocompatible
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Vundle Required Bundle
Bundle 'gmarik/vundle'

" General Bundles
Bundle 'bling/vim-airline'

" Project Navigation
Bundle 'scrooloose/nerdtree'
Bundle 'kien/ctrlp.vim'

" Buffer Navigation
Bundle 'jeetsukumaran/vim-buffergator'

" Code Navigation (setup: brew install ctags)
"Bundle 'majutsushi/tagbar'

" Code Completion (setup: http://bit.ly/12c5JHr)
Bundle 'Valloric/YouCompleteMe'

" Code Helpers
Bundle 'Raimondi/delimitMate'

" HTML
Bundle 'othree/html5.vim'
Bundle 'mattn/emmet-vim'

" CSS
Bundle 'ap/vim-css-color'

" JavaScript (setup for tern: npm install (within bundle dir))
Bundle 'jelera/vim-javascript-syntax'
Bundle 'pangloss/vim-javascript'
Bundle 'marijnh/tern_for_vim'
Bundle 'othree/javascript-libraries-syntax.vim'

" Markdown
Bundle 'plasticboy/vim-markdown'

" Git Integration
Bundle 'airblade/vim-gitgutter'

" Searching
Bundle 'mileszs/ack.vim'

" Comments
Bundle 'scrooloose/nerdcommenter'

" Syntax Checking (setup: npm install -g jshint)
Bundle 'scrooloose/syntastic'

" Look & Feel
Bundle 'nathanaelkane/vim-indent-guides'
Bundle 'myusuf3/numbers.vim'

" Color Scheme Bundles
Bundle 'w0ng/vim-hybrid'
Bundle 'altercation/vim-colors-solarized'

" BUNDLES TO TRY SOMEDAY
"Bundle 'godlygeek/tabular'
"Bundle 'terryma/vim-multiple-cursors'

filetype plugin indent on


""" COLOR SCHEMES
" Colors
set t_Co=256
syntax on

" Color Scheme
set background=dark
colorscheme hybrid
"colorscheme solarized

""" GENERAL SETTINGS
" Backup & Swap Files
set backupdir=~/.vim/vim-tmp
set directory=~/.vim/vim-tmp

" Font
set guifont=Monaco:h13.00
set linespace=1

" Status Bar
set laststatus=2

" Searching
set ignorecase
set smartcase
set incsearch
set hlsearch

" Whitespace
set list
set listchars=tab:▸\ ,eol:¬

" Wrapping
set nowrap

" Folding
set nofoldenable

" Current Line
set cursorline
highlight CursorLine ctermbg=darkgray guibg=#343434

" Scrolling
set scrolloff=999

" Code Width
set colorcolumn=80
highlight OverLength ctermbg=gray ctermfg=white guibg=#4a4444
highlight ColorColumn ctermbg=gray guibg=#773333
match OverLength /\%81v.\+/

" Tabs & Indentation
set expandtab
set shiftwidth=2
set softtabstop=2


""" BASIC MAPPINGS
" Edit and Reload .vimrc
nnoremap <leader>ev <C-w><C-v><C-l>:e ~/.vimrc<cr>
nnoremap <leader>egv <C-w><C-v><C-l>:e ~/.gvimrc<cr>
nnoremap <leader>rv :source ~/.vimrc<CR>:source ~/.gvimrc<CR>:echo 'Done'<CR>

" Buffers
nnoremap <leader>d :bd<CR>

" Movement
nnoremap j gj
nnoremap <D-j> <C-f>
nnoremap k gk
nnoremap <D-k> <C-b>

" Split Windows
nnoremap <leader>s :vs<CR>
nnoremap <leader>v :sp<CR>

" Split Navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Clear Search Results
nnoremap <leader><space> :noh<CR>

" Disable F1
noremap <F1> <ESC>

" Easy Colon
nnoremap ; :

" Easier writing (for paragraphs, blog posts, etc.)
nnoremap <leader>w :set tw=79 fo+=t<CR>
nnoremap <leader>ww :set tw=0 fo-=t<CR>

" Easier editing of Markdown files
au BufRead,BufNewFile *.md setlocal tw=79 fo+=t

""" PLUGIN MAPPINGS & CUSTOMIZATION
" NerdTree
map <F2> :NERDTreeToggle<CR>
let NERDTreeIgnore=['.vim$', '\~$']

" Command-P
let g:ctrlp_custom_ignore = 'node_modules\|bower_components\|git'

" Tagbar
nmap <F3> :TagbarToggle<CR>
let g:tagbar_type_javascript = {
    \ 'ctagstype' : 'JavaScript',
    \ 'kinds'     : [
        \ 'o:objects',
        \ 'f:functions',
        \ 'a:arrays',
        \ 's:strings'
    \ ]
\ }

" Ctrl-P
let g:ctrlp_map = ''
nmap <C-t> :CtrlP<SPACE>
nmap <D-t> :CtrlP<CR>
imap <D-t> <ESC>:CtrlP<CR>

" NerdCommenter
map <D-/> <PLUG>NERDCommenterToggle<CR>
imap <D-/> <ESC><PLUG>NERDCommenterToggle<CR>i

" Ack
nmap <D-f> :Ack<SPACE>
imap <D-f> <ESC>:Ack<SPACE>

" Numbers
set number

" Indent Guides
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1

" Syntastic
let g:syntastic_check_on_open=1
let g:syntastic_html_tidy_ignore_errors = [
    \"proprietary attribute \"ng-"]
    \"trimming empty <i>",
    \"trimming empty <span>",
    \"<input> proprietary attribute \"autocomplete\"",
    \"proprietary attribute \"role\"",
    \"proprietary attribute \"hidden\"",
\]

" JavaScript Syntax
let g:used_javascript_libs = 'jquery,angularjs'

"YouCompleteMe
let g:ycm_add_preview_to_completeopt=0
let g:ycm_confirm_extra_conf=0
set completeopt-=preview

""" MISCELLANEOUS
" Autosave
au FocusLost * :wa
au FocusLost silent! :wa
