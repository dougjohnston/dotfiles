" Leader
let mapleader=","

" Global Ignores
set wildignore+=*/tmp/*,*/log/*

" Syntax Highlighting
set t_Co=256
syntax on

""" VIM BUNDLES
" Vundle Setup
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()

" INSTALL VUNDLE PLUGINS:
" :PluginInstall

" UPDATE VUNDLE PLUGINS:
" :PluginUpdate

" Vundle Required Plugin
Plugin 'gmarik/vundle'

" Vim Movement
Plugin 'justinmk/vim-sneak'
  let g:sneak#s_next = 1

" Color Scheme
Plugin 'dougjohnston/tender.vim'
"Plugin 'flazz/vim-colorschemes'
"Plugin 'w0ng/vim-hybrid'
"Plugin 'altercation/vim-colors-solarized'
"Plugin 'morhetz/gruvbox'
  "let g:gruvbox_contrast_dark = 'medium'
  "let g:gruvbox_sign_column = 'bg0'
  "let g:gruvbox_vert_split = 'yellow'
  "let g:gruvbox_invert_signs = '1'

  "set background=dark


" Status Bar and Buffers
Plugin 'itchyny/lightline.vim'
  " Move to the previous buffer
  nmap <c-o> :bprevious<CR>

  " Move to the next buffer
  nmap <c-p> :bnext<CR>


" Project Navigation
Plugin 'scrooloose/nerdtree'
  let NERDTreeShowHidden = 0
  let NERDTreeWinSize = 36
  let NERDTreeMinimalUI = 1
  let NERDTreeIgnore=['.vim$', '\~$']
  let NERDTreeMapOpenVSplit = 'v'
  let NERDTreeQuitOnOpen = 1
  map <F2> :NERDTreeToggle<CR>

Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'kien/ctrlp.vim'
  let g:ctrlp_map = '<D-t>'
  let g:ctrlp_custom_ignore = {
    \ 'dir':  '\v[\/](\.git|log|migrate)$',
  \}

  " Easy bindings for its various modes
  "nmap <leader>bb :CtrlPBuffer<CR>
  "nmap <leader>bm :CtrlPMixed<cr>
  "nmap <leader>bs :CtrlPMRU<cr>

" Buffer Navigation
Plugin 'jeetsukumaran/vim-buffergator'
  " Use the right side of the screen
  let g:buffergator_viewport_split_policy = 'R'

  " I want my own keymappings...
  let g:buffergator_suppress_keymaps = 1

  " Looper buffers
  "let g:buffergator_mru_cycle_loop = 1

  " View the entire list of buffers open
  nmap <leader>b :BuffergatorOpen<cr>

  " Go to the previous buffer open
  "nmap <leader>jj :BuffergatorMruCyclePrev<cr>

  " Go to the next buffer open
  "nmap <leader>kk :BuffergatorMruCycleNext<cr>

" Code Completion (setup: http://bit.ly/12c5JHr)
Plugin 'Valloric/YouCompleteMe'

" Code Helpers
Plugin 'Raimondi/delimitMate'
Plugin 'tpope/vim-surround'

" HTML
Plugin 'othree/html5.vim'
Plugin 'mattn/emmet-vim'
  let g:user_emmet_leader_key = '<C-e>'
  autocmd FileType html,css,eruby EmmetInstall

" CSS
Plugin 'ap/vim-css-color'

" Ruby
Plugin 'vim-ruby/vim-ruby'

" Rails
Plugin 'tpope/vim-rails'
  nnoremap <leader>a :AV<CR>
  nnoremap <leader>r :RV<CR>
  nnoremap <leader>t :Rake<CR>
  nnoremap <leader>y :.Rake<CR>

" JavaScript (setup for tern: npm install (within bundle dir))
Plugin 'jelera/vim-javascript-syntax'
Plugin 'pangloss/vim-javascript'
"Plugin 'marijnh/tern_for_vim'
Plugin 'othree/javascript-libraries-syntax.vim'
  let g:used_javascript_libs = 'angularjs, angularui,angularuirouter,jquery,react,jasmine'

" JSX
Plugin 'mxw/vim-jsx'
  let g:jsx_ext_required = 0

" Elixir
Plugin 'elixir-lang/vim-elixir'

" CoffeeScript
Plugin 'kchmck/vim-coffee-script'

" Markdown
Plugin 'plasticboy/vim-markdown'

" Git Integration
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'

" Searching
Plugin 'mileszs/ack.vim'
  nmap <D-f> :Ack!<SPACE>
  imap <D-f> <ESC>:Ack!<SPACE>

  " Except don't actually use Ack
  let g:ackprg = 'ag --nogroup --nocolor --column'
  let g:ackhighlight = 1

" Comments
Plugin 'scrooloose/nerdcommenter'

" Syntax Checking (setup: npm install -g jshint)
Plugin 'scrooloose/syntastic'
  set statusline+=%#warningmsg#
  set statusline+=%{SyntasticStatuslineFlag()}
  set statusline+=%*

  let g:syntastic_auto_loc_list = 0
  let g:syntastic_loc_list_height = 5
  let g:syntastic_check_on_open = 1
  let g:syntastic_check_on_wq = 1
  let g:syntastic_cursor_column = 0

  let g:syntastic_enable_signs = 1
  let g:syntastic_error_symbol = "✗"
  let g:syntastic_warning_symbol = "⚠"

  let g:syntastic_ruby_checkers = ['rubocop']
  let g:syntastic_scss_checkers = ['scss_lint']
  let g:syntastic_javascript_checkers = ['eslint']
  let g:syntastic_ignore_files = ['schema\.rb', 'structure\.rb']

  nnoremap <leader>sc :SyntasticCheck<CR>

" Whitespace
Plugin 'ntpeters/vim-better-whitespace'
  autocmd BufWritePre * StripWhitespace

" Look & Feel
Plugin 'nathanaelkane/vim-indent-guides'
"Plugin 'myusuf3/numbers.vim' " PERFORMANCE HIT!

" Snippet Support
Plugin 'SirVer/ultisnips'
  set rtp+=~/.dotfiles/vim/

  let g:UltiSnipsExpandTrigger = "<tab>"
  let g:UltiSnipsJumpForwardTrigger = "<tab>"
  let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"
  let g:UltiSnipsEditSplit = "vertical"
  let g:UltiSnipsSnippetsDir = "~/.dotfiles/vim/UltiSnips"
  let g:UltiSnipsSnippetDirectories=['UltiSnips', 'mysnippets']

  nnoremap <leader>ue :UltiSnipsEdit<CR>

" Swap Windows
Plugin 'wesQ3/vim-windowswap'

"Plugin 'MarcWeber/vim-addon-mw-utils'
"Plugin 'tomtom/tlib_vim'
"Plugin 'garbas/vim-snipmate'
  "let g:snipMate = {}
  "let g:snipMate.scope_aliases = {}
  "let g:snipMate.scope_aliases['ruby'] = 'ruby,rails'

" Snippet Libraries
Plugin 'honza/vim-snippets'

" RSpec Integration
"Plugin 'tpope/vim-dispatch'
  "map <Leader>t :Dispatch rspec %<CR>

" BUNDLES TO TRY SOMEDAY
"Plugin 'godlygeek/tabular'
"Plugin 'terryma/vim-multiple-cursors'

call vundle#end()
filetype plugin indent on

let macvim_skip_colorscheme = 1
"colorscheme gruvbox
"colorscheme hybrid
"colorscheme solarized
"colorscheme codeschool
colorscheme tender
"let g:lightline = { 'colorscheme': 'tender' }

""" VIM PERFORMANCE
set synmaxcol=140
"set ttyfast    " fast terminal
"set ttyscroll=3
"set lazyredraw " avoid scrolling problems

""" GENERAL SETTINGS
" Backup & Swap Files
set backupdir=~/.vim/vim-tmp
set directory=~/.vim/vim-tmp

" Font
"set guifont=Monaco:h13.00
"set linespace=1
set guifont=FiraMono:h14
set linespace=-1

" Status Bar
set laststatus=2

" Searching
set ignorecase
set smartcase
set incsearch
set hlsearch

" Whitespace
set list
set listchars=tab:▸\ ,eol:¬

" Wrapping
set nowrap

" Current Line PERFORMANCE HIT!!
set cursorline
highlight CursorLine ctermbg=DarkGray guibg=#343434

" Scrolling
set scrolloff=999

" Code Width
set colorcolumn=80
highlight ColorColumn ctermbg=Red guibg=#99343d

" Tabs & Indentation
set expandtab
set shiftwidth=2
set softtabstop=2

" Splitting
set splitbelow
set splitright

""" BASIC MAPPINGS
" Edit and Reload .vimrc
nnoremap <leader>ev <C-w><C-v><C-l>:e ~/.vimrc<cr>
nnoremap <leader>egv <C-w><C-v><C-l>:e ~/.gvimrc<cr>
nnoremap <leader>rv :source ~/.vimrc<CR>:source ~/.gvimrc<CR>:echo 'Done'<CR>

" Buffers
nnoremap <leader>d :bd<CR>

" Movement
nnoremap j gj
nnoremap <D-j> <C-f>
nnoremap k gk
nnoremap <D-k> <C-b>

" Split Windows
nnoremap <leader>v :vs<CR>
nnoremap <leader>s :sp<CR>

" Split Resizing
" Maximize Current Buffer
nnoremap <leader>f :NERDTreeClose<CR> <C-w>\|<C-w>_
" Fit all splits in window
nnoremap <leader>u <C-w>=

" Split Navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Clear Search Results
nnoremap <leader><space> :noh<CR>

" Disable F1
noremap <F1> <ESC>

" Easy Colon
nnoremap ; :

" Easier writing (for paragraphs, blog posts, etc.)
"nnoremap <leader>w :set tw=79 fo+=t<CR>
"nnoremap <leader>ww :set tw=0 fo-=t<CR>

" Folding
set nofoldenable        " Disable folding
"set foldmethod=syntax
"set foldlevelstart=3
"nnoremap <Space> zi

" Easier editing of Markdown files
"au BufRead,BufNewFile *.md setlocal tw=79 fo+=t

""" PLUGIN MAPPINGS & CUSTOMIZATION
" NerdCommenter
map <D-/> <PLUG>NERDCommenterToggle<CR>
imap <D-/> <ESC><PLUG>NERDCommenterToggle<CR>i

" Numbers
set number

" Indent Guides
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1

" JavaScript Syntax
let g:used_javascript_libs = 'jquery,angularjs'

" YouCompleteMe
let g:ycm_confirm_extra_conf=0
set completeopt-=preview
" Remap the selection keys so snipMate can have <Tab>
let g:ycm_key_list_select_completion = ['<Down>', '<C-j>']
let g:ycm_key_list_previous_completion = ['<Up>', '<C-k>']

""" MISCELLANEOUS
" Command-S save
map <D-s> :w
imap <D-s> <ESC>:w

" Autosave
au FocusLost * :wa
au FocusLost silent! :wa
